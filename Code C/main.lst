CCS PCH C Compiler, Version 5.008, 5967               09-mai-19 14:22

               Filename:   C:\Users\USER1\OneDrive - EPHEC asbl\2T\Analyse Signaux\Q2\Projet\TEST3\main.lst

               ROM used:   720 bytes (2%)
                           Largest free fragment is 32048
               RAM used:   10 (1%) at main() level
                           21 (1%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   0214
.................... #include <18F458.h> 
.................... //////// Standard Header file for the PIC18F458 device //////////////// 
.................... #device PIC18F458 
*
0070:  MOVLW  8E
0072:  MOVWF  00
0074:  MOVFF  0C,01
0078:  MOVFF  0B,02
007C:  CLRF   03
007E:  MOVF   01,F
0080:  BNZ   0094
0082:  MOVFF  02,01
0086:  CLRF   02
0088:  MOVLW  08
008A:  SUBWF  00,F
008C:  MOVF   01,F
008E:  BNZ   0094
0090:  CLRF   00
0092:  BRA    00A4
0094:  BCF    FD8.0
0096:  BTFSC  01.7
0098:  BRA    00A2
009A:  RLCF   02,F
009C:  RLCF   01,F
009E:  DECF   00,F
00A0:  BRA    0094
00A2:  BCF    01.7
00A4:  GOTO   0268 (RETURN)
00A8:  MOVF   0B,W
00AA:  BTFSC  FD8.2
00AC:  BRA    0190
00AE:  MOVWF  00
00B0:  MOVF   0F,W
00B2:  BTFSC  FD8.2
00B4:  BRA    0190
00B6:  ADDWF  00,F
00B8:  BNC   00C2
00BA:  MOVLW  81
00BC:  ADDWF  00,F
00BE:  BC    0190
00C0:  BRA    00CA
00C2:  MOVLW  7F
00C4:  SUBWF  00,F
00C6:  BNC   0190
00C8:  BZ    0190
00CA:  MOVFF  0C,13
00CE:  MOVF   10,W
00D0:  XORWF  13,F
00D2:  BSF    0C.7
00D4:  BSF    10.7
00D6:  MOVF   0E,W
00D8:  MULWF  12
00DA:  MOVFF  FF4,15
00DE:  MOVF   0D,W
00E0:  MULWF  11
00E2:  MOVFF  FF4,03
00E6:  MOVFF  FF3,14
00EA:  MULWF  12
00EC:  MOVF   FF3,W
00EE:  ADDWF  15,F
00F0:  MOVF   FF4,W
00F2:  ADDWFC 14,F
00F4:  MOVLW  00
00F6:  ADDWFC 03,F
00F8:  MOVF   0E,W
00FA:  MULWF  11
00FC:  MOVF   FF3,W
00FE:  ADDWF  15,F
0100:  MOVF   FF4,W
0102:  ADDWFC 14,F
0104:  MOVLW  00
0106:  CLRF   02
0108:  ADDWFC 03,F
010A:  ADDWFC 02,F
010C:  MOVF   0C,W
010E:  MULWF  12
0110:  MOVF   FF3,W
0112:  ADDWF  14,F
0114:  MOVF   FF4,W
0116:  ADDWFC 03,F
0118:  MOVLW  00
011A:  ADDWFC 02,F
011C:  MOVF   0C,W
011E:  MULWF  11
0120:  MOVF   FF3,W
0122:  ADDWF  03,F
0124:  MOVF   FF4,W
0126:  ADDWFC 02,F
0128:  MOVLW  00
012A:  CLRF   01
012C:  ADDWFC 01,F
012E:  MOVF   0E,W
0130:  MULWF  10
0132:  MOVF   FF3,W
0134:  ADDWF  14,F
0136:  MOVF   FF4,W
0138:  ADDWFC 03,F
013A:  MOVLW  00
013C:  ADDWFC 02,F
013E:  ADDWFC 01,F
0140:  MOVF   0D,W
0142:  MULWF  10
0144:  MOVF   FF3,W
0146:  ADDWF  03,F
0148:  MOVF   FF4,W
014A:  ADDWFC 02,F
014C:  MOVLW  00
014E:  ADDWFC 01,F
0150:  MOVF   0C,W
0152:  MULWF  10
0154:  MOVF   FF3,W
0156:  ADDWF  02,F
0158:  MOVF   FF4,W
015A:  ADDWFC 01,F
015C:  INCF   00,F
015E:  BTFSC  01.7
0160:  BRA    016C
0162:  RLCF   14,F
0164:  RLCF   03,F
0166:  RLCF   02,F
0168:  RLCF   01,F
016A:  DECF   00,F
016C:  MOVLW  00
016E:  BTFSS  14.7
0170:  BRA    0186
0172:  INCF   03,F
0174:  ADDWFC 02,F
0176:  ADDWFC 01,F
0178:  MOVF   01,W
017A:  BNZ   0186
017C:  MOVF   02,W
017E:  BNZ   0186
0180:  MOVF   03,W
0182:  BNZ   0186
0184:  INCF   00,F
0186:  BTFSC  13.7
0188:  BSF    01.7
018A:  BTFSS  13.7
018C:  BCF    01.7
018E:  BRA    0198
0190:  CLRF   00
0192:  CLRF   01
0194:  CLRF   02
0196:  CLRF   03
0198:  GOTO   028A (RETURN)
019C:  MOVFF  0C,13
01A0:  MOVF   10,W
01A2:  XORWF  13,F
01A4:  BTFSS  13.7
01A6:  BRA    01B2
01A8:  BCF    FD8.2
01AA:  BCF    FD8.0
01AC:  BTFSC  0C.7
01AE:  BSF    FD8.0
01B0:  BRA    0210
01B2:  MOVFF  0C,13
01B6:  MOVFF  0F,14
01BA:  MOVF   0B,W
01BC:  SUBWF  14,F
01BE:  BZ    01CC
01C0:  BTFSS  13.7
01C2:  BRA    0210
01C4:  MOVF   FD8,W
01C6:  XORLW  01
01C8:  MOVWF  FD8
01CA:  BRA    0210
01CC:  MOVFF  10,14
01D0:  MOVF   0C,W
01D2:  SUBWF  14,F
01D4:  BZ    01E2
01D6:  BTFSS  13.7
01D8:  BRA    0210
01DA:  MOVF   FD8,W
01DC:  XORLW  01
01DE:  MOVWF  FD8
01E0:  BRA    0210
01E2:  MOVFF  11,14
01E6:  MOVF   0D,W
01E8:  SUBWF  14,F
01EA:  BZ    01F8
01EC:  BTFSS  13.7
01EE:  BRA    0210
01F0:  MOVF   FD8,W
01F2:  XORLW  01
01F4:  MOVWF  FD8
01F6:  BRA    0210
01F8:  MOVFF  12,14
01FC:  MOVF   0E,W
01FE:  SUBWF  14,F
0200:  BZ    020E
0202:  BTFSS  13.7
0204:  BRA    0210
0206:  MOVF   FD8,W
0208:  XORLW  01
020A:  MOVWF  FD8
020C:  BRA    0210
020E:  BCF    FD8.0
0210:  GOTO   02B8 (RETURN)
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=40000000) 
*
0004:  CLRF   FEA
0006:  MOVLW  0B
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    002A
000E:  MOVLW  0C
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  F7
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  BRA    0026
0026:  DECFSZ FEF,F
0028:  BRA    000E
002A:  GOTO   0250 (RETURN)
.................... #define LED_GREEN PIN_C2 
.................... #define LED_RED PIN_C1 
.................... #USE RS232 (BAUD = 19200, XMIT = PIN_C7, RCV = PIN_C6, stream = RF) 
002E:  BCF    F94.7
0030:  BCF    F8B.7
0032:  MOVLW  08
0034:  MOVWF  01
0036:  BRA    0038
0038:  NOP   
003A:  BSF    01.7
003C:  BRA    005A
003E:  BCF    01.7
0040:  RRCF   0B,F
0042:  BTFSC  FD8.0
0044:  BSF    F8B.7
0046:  BTFSS  FD8.0
0048:  BCF    F8B.7
004A:  BSF    01.6
004C:  BRA    005A
004E:  BCF    01.6
0050:  DECFSZ 01,F
0052:  BRA    0040
0054:  BRA    0056
0056:  NOP   
0058:  BSF    F8B.7
005A:  MOVLW  A7
005C:  MOVWF  FE9
005E:  DECFSZ FE9,F
0060:  BRA    005E
0062:  BRA    0064
0064:  BTFSC  01.7
0066:  BRA    003E
0068:  BTFSC  01.6
006A:  BRA    004E
006C:  GOTO   0260 (RETURN)
....................  
.................... void main() 
*
0214:  CLRF   FF8
0216:  BCF    FD0.7
0218:  BCF    F94.7
021A:  BSF    F8B.7
021C:  BSF    FC1.0
021E:  BSF    FC1.1
0220:  BSF    FC1.2
0222:  BCF    FC1.3
0224:  MOVLW  07
0226:  MOVWF  FB4
0228:  MOVLW  1E
022A:  MOVWF  06
.................... { 
....................     int temperature_brut; 
....................     int temperature_max = 30; 
....................     float temperature_celcius; 
....................      
....................     setup_adc_ports(RA0_RA1_RA3_ANALOG);  
022C:  BCF    FC1.0
022E:  BCF    FC1.1
0230:  BSF    FC1.2
0232:  BCF    FC1.3
....................     setup_adc(ADC_CLOCK_DIV_8); 
0234:  BCF    FC1.6
0236:  BSF    FC2.6
0238:  BCF    FC2.7
023A:  BSF    FC1.7
023C:  BSF    FC2.0
....................     
....................    while(TRUE) 
....................    { 
....................       // Read temp on temp sensor 
....................       set_adc_channel(0);  
023E:  MOVLW  00
0240:  MOVWF  01
0242:  MOVF   FC2,W
0244:  ANDLW  C7
0246:  IORWF  01,W
0248:  MOVWF  FC2
....................       delay_ms(10); 
024A:  MOVLW  0A
024C:  MOVWF  0B
024E:  BRA    0004
....................       temperature_brut = read_adc(); 
0250:  BSF    FC2.2
0252:  BTFSC  FC2.2
0254:  BRA    0252
0256:  MOVFF  FC3,05
....................       printf("%c",temperature_brut); 
025A:  MOVFF  05,0B
025E:  BRA    002E
....................        
....................        
....................       //temperature_celcius = temperature_brut * (5.0 / 1023.0 * 100.0); 
....................       temperature_celcius = temperature_brut * (9.009); 
0260:  CLRF   0C
0262:  MOVFF  05,0B
0266:  BRA    0070
0268:  MOVFF  03,0E
026C:  MOVFF  02,0D
0270:  MOVFF  01,0C
0274:  MOVFF  00,0B
0278:  MOVLW  DD
027A:  MOVWF  12
027C:  MOVLW  24
027E:  MOVWF  11
0280:  MOVLW  10
0282:  MOVWF  10
0284:  MOVLW  82
0286:  MOVWF  0F
0288:  BRA    00A8
028A:  MOVFF  03,0A
028E:  MOVFF  02,09
0292:  MOVFF  01,08
0296:  MOVFF  00,07
....................        
....................       if(temperature_celcius > 30){ 
029A:  CLRF   0E
029C:  CLRF   0D
029E:  MOVLW  70
02A0:  MOVWF  0C
02A2:  MOVLW  83
02A4:  MOVWF  0B
02A6:  MOVFF  0A,12
02AA:  MOVFF  09,11
02AE:  MOVFF  08,10
02B2:  MOVFF  07,0F
02B6:  BRA    019C
02B8:  BNC   02C4
....................        
....................          //Green led low & Red led high 
....................          output_bit(LED_RED,1); 
02BA:  BSF    F8B.1
02BC:  BCF    F94.1
....................          output_bit(LED_GREEN,0); 
02BE:  BCF    F8B.2
02C0:  BCF    F94.2
....................       } 
02C2:  BRA    02CC
....................       else{ 
....................          //Green led high & Red led low 
....................          output_bit(LED_RED,0); 
02C4:  BCF    F8B.1
02C6:  BCF    F94.1
....................          output_bit(LED_GREEN,1); 
02C8:  BSF    F8B.2
02CA:  BCF    F94.2
....................        
....................       } 
02CC:  BRA    023E
....................        
....................        
....................    } 
.................... } 
....................  
02CE:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV25 NOWDT WDT128
   Word  3: 0000  
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
